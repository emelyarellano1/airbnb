{
  "_args": [
    [
      {
        "raw": "live-refresh",
        "scope": null,
        "escapedName": "live-refresh",
        "name": "live-refresh",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\ramos\\desktop\\airbnb"
    ]
  ],
  "_from": "live-refresh@latest",
  "_id": "live-refresh@2.0.0",
  "_inCache": true,
  "_location": "/live-refresh",
  "_npmUser": {
    "name": "shallker-wang",
    "email": "shallker.wang@gmail.com"
  },
  "_npmVersion": "1.2.32",
  "_phantomChildren": {},
  "_requested": {
    "raw": "live-refresh",
    "scope": null,
    "escapedName": "live-refresh",
    "name": "live-refresh",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/live-refresh/-/live-refresh-2.0.0.tgz",
  "_shasum": "a1a1af95b2bb3b64a3a01aec4a245dcdac50a7f6",
  "_shrinkwrap": null,
  "_spec": "live-refresh",
  "_where": "C:\\Users\\ramos\\desktop\\airbnb",
  "author": {
    "name": "Shallker Wang",
    "email": "shallker.wang@profero.com"
  },
  "bin": {
    "refresh": "./bin/refresh"
  },
  "bugs": {
    "url": "https://github.com/shallker-wang/live-refresh/issues"
  },
  "dependencies": {
    "commander": "*",
    "dever": "*",
    "eventy": "*",
    "ws": "*"
  },
  "description": "Live refresh",
  "devDependencies": {
    "coffee-script": "*",
    "mocha": "*",
    "should": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "a1a1af95b2bb3b64a3a01aec4a245dcdac50a7f6",
    "tarball": "https://registry.npmjs.org/live-refresh/-/live-refresh-2.0.0.tgz"
  },
  "homepage": "https://github.com/shallker-wang/live-refresh#readme",
  "keywords": [
    "liverefresh",
    "live-refresh",
    "livereload",
    "live-reload",
    "autoreload"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "shallker-wang",
      "email": "shallker.wang@gmail.com"
    }
  ],
  "name": "live-refresh",
  "optionalDependencies": {},
  "readme": "live-refresh\n==========\n\nLiveReload was too hard for me to understand, so I wrote LiveRefresh.\n\n[![Build Status](https://drone.io/github.com/shallker-wang/live-refresh/status.png)](https://drone.io/github.com/shallker-wang/live-refresh/latest)\n\n## Installation\n```\nsudo npm install live-refresh -g\n```\n\n## Quick Start\nGo to project and live refresh current directory:\n```bash\ncd project-x\nrefresh .\n```\n\n## Features\n* Refresh the page when .jpg .jpeg .js .html files changed, created or deleted\n* CSS styles auto reload when .css file changed without refreshing the page\n\n## Module API\n```javascript\nvar liverefresh = require('live-refresh');\n```\n\n### set(option, value)\nLiverefresh option setter.\n\n```javascript\nliverefresh.set('watch.deep', true);\nliverefresh.set('watch.interval', 500);\nliverefresh.set('watch.persistent', true);\nliverefresh.set('watch.extensions', ['js', 'css', 'html']);\nliverefresh.set('ignore.files', [/^\\./]);\nliverefresh.set('ignore.directories', [/node_modules/, /^\\.\\S/]);\n```\n\n### watch(path)\nCreate a Liverefresh server and watch file changes on the given path.\n\n```javascript\nliverefresh.watch('project/x');\nliverefresh.watch('./build/html').watch('./build/css');\n```\n\n### unwatch(path)\nRemove watched path.\n\n```javascript\nliverefresh.unwatch('./build/css');\n```\n\n### stop()\nStop liverefresh server and file watchers.\n\n```javascript\nliverefresh.stop();\n```\n\n### on(event, callback)\nAdd event listener.\n\n```javascript\nliverefresh.on('connect', function(connection) {)\nliverefresh.on('stop', function() {})\n```\n\n### off(event, callback)\nRemove event listener.\n\n```javascript\nfunction onConnect() {}\nliverefresh.on('connect', onConnect);\nliverefresh.off('connect', onConnect);\n```\n\n### connection.refresh()\nSend a refresh command to the connected client.\n\n```javascript\nliverefresh.on('connect', function(connection) {\n  connection.refresh();\n})\n```\n\n### connection.close()\nClose the connection from client.\n\n```javascript\nconnection.close()\n```\n\n### connection.on(event, callback)\nAdd event listener on connection.\n\n```javascript\nconnection.on('close', function() {})\n```\n\n\n## Install Chrome extension\n[LiveRefresh Chrome Extension](https://github.com/shallker-wang/live-refresh-chrome-extension)\n\n## License (MIT)\n\nCopyright (c) 2013 Shallker Wang\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shallker-wang/live-refresh.git"
  },
  "scripts": {
    "test": "mocha --recursive --compilers coffee:coffee-script -r should"
  },
  "version": "2.0.0"
}
